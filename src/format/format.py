import json

ID64_MAGIC_NUMBER = 76561197960265728
TF2BD_ATTRIBUTES = ["cheater", "suspicious", "exploiter", "racist"]

##### REPEATED CALLERS #####

def _format_ncc(string: str) -> str:
    return f"{string} - {string}"

def _format_cathook(string: str) -> str:
    return f"cat_pl_add_id {int(string) - ID64_MAGIC_NUMBER} RAGE"

##### FORMATTERS #####

def format_ncc_list(list: list) -> list:
    return [_format_ncc(i) for i in list]

def format_cathook_list(list: list) -> list:
    return [_format_cathook(i) for i in list]

def format_amalgam_list(list: list, tag: str = "Bot") -> str:
    formatted_list = ["{\n"]
    for i in list:
        formatted_list.append(f"""    "{int(i) - ID64_MAGIC_NUMBER}": [
        "{tag}"
    ]{"," if i != list[-1] else ""}\n""")
    formatted_list.append("}")
    return "".join(formatted_list)

def format_amalgam_dict(dict: dict) -> str:
    formatted_list = ["{\n"]
    for i, tags in dict.items():
        formatted_list.append(f"""    "{i}": [
        {", ".join(f'"{tag}"' for tag in tags)}
    ]{"," if i != list(dict.keys())[-1] else ""}\n""")
    formatted_list.append("}")
    return "".join(formatted_list)

def format_lbox_list(list: list, priority: int) -> str:
    if priority > 10:
        priority = 10
    if priority <= 1:
        priority = 2
    ret = ""
    for i in list:
        ret += f"{dec_to_hex(int(i) - ID64_MAGIC_NUMBER)};{priority};"
    return ret

def format_tf2bd_list(ids, listname = "Bot", attribute_index = 1, proof = "generated by BotListConverter"):
    for idx, single_attribute in enumerate(TF2BD_ATTRIBUTES):
        print(f"{idx + 1}. {single_attribute}")
        
    attribute_index = int(input(f"Which label do you want to assign for the '{listname}' list?"))
    attributes = TF2BD_ATTRIBUTES[attribute_index - 1]
    
    players = []
    for steam_id in ids:
        steam_id_32 = int(steam_id) - ID64_MAGIC_NUMBER
        players.append({
            "attributes": [attributes],
            "proof": [proof],
            "steamid": f"[U:1:{steam_id_32}]"
        })
    
    data = {
        "$schema": "https://raw.githubusercontent.com/PazerOP/tf2_bot_detector/master/schemas/v3/playerlist.schema.json",
        "file_info": {
            "authors": ["Pianta's BotListConverter"],
            "description": f"generated by BotListConverter - list '{listname}'",
            "title": "autogen"
        },
        "players": players
    }
    
    return json.dumps(data, indent=4)

##### UTILS #####

def dec_to_hex(num):
    hex_str = hex(num)[2:]
    return hex_str

def remove_duplicates_dict(input_dict):
    output_dict = {}
    for key, value in input_dict.items():
        output_dict[key] = list(set(value))
    return output_dict

def remove_duplicates_list(input_list):
    return list(set(input_list))
